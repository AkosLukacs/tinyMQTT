var MQTT=function(a){this.server=a;mq=this};function onData(a){if(3===a.charCodeAt(0)>>4){var b=a.charCodeAt(0),c=a.charCodeAt(2)<<8|a.charCodeAt(3);a={topic:a.substr(4,c),message:a.substr(4+c,a.charCodeAt(1)-c),dup:(b&8)>>3,qos:(b&6)>>1,retain:b&1};mq.emit("message",a)}}function mqttStr(a){return String.fromCharCode(a.length>>8,a.length&255)+a}function mqttPacket(a,b,c){return String.fromCharCode(a,b.length+c.length)+b+c}
function mqttConnect(a){return mqttPacket(16,mqttStr("MQTT")+"\u0004\x00\u00ff\u00ff",mqttStr(a))}MQTT.prototype.connect=function(){client=require("net").connect({host:mq.server,port:1883},function(){client.write(mqttConnect(getSerial()));mq.emit("connected");client.on("data",onData.bind(mq));client.on("end",function(){mq.emit("disconnected")})});mq.client=client};MQTT.prototype.subscribe=function(a){mq.client.write(mqttPacket(130,String.fromCharCode(256,1),mqttStr(a)+String.fromCharCode(1)))};
MQTT.prototype.publish=function(a,b){mq.client.write(mqttPacket(49,mqttStr(a),b));mq.emit("published")};MQTT.prototype.disconnect=function(){mq.client.write(String.fromCharCode(224)+"\x00")};exports.create=function(a){return new MQTT(a)};